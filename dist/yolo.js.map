{"version":3,"sources":["webpack://YOLO/webpack/universalModuleDefinition","webpack://YOLO/webpack/bootstrap","webpack://YOLO/external \"tf\"","webpack://YOLO/./src/utils/preProcess.ts","webpack://YOLO/./src/index.ts","webpack://YOLO/./src/detector/index.ts","webpack://YOLO/./src/detector/config.ts","webpack://YOLO/./src/shared/coco_labels.ts","webpack://YOLO/./src/detector/yolo.ts","webpack://YOLO/./src/utils/draw.ts","webpack://YOLO/./src/classifier/index.ts","webpack://YOLO/./src/classifier/config.ts","webpack://YOLO/./src/shared/darknet_imagenet_labels.ts","webpack://YOLO/./src/classifier/darknet.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","tf","preProcess","input","size","options","tidy","image","Tensor","HTMLImageElement","HTMLVideoElement","ImageData","HTMLCanvasElement","browser","fromPixels","_a","__read","shape","imgWidth","imgHeight","normalized","toFloat","div","scalar","resized","alignCorners","AlignCorners","ResizeOption","resizeNearestNeighbor","resizeBilinear","reshape","index_1","yolov3Config","tinyYOLOv3Config","tinyYOLOv2Config","tinyYOLOLiteConfig","index_2","darknetRefrenceConfig","darknet19Config","tinydarknetConfig","Detector","YOLODetector","Classifier","DarknetClassifier","config_1","yolo_1","coco_labels_1","modelName","modelURL","modelSize","iouThreshold","classProbThreshold","maxOutput","resizeOption","labels","cocoLabels","version","anchors","masks","preProcess_1","draw_1","this","load","Error","loadLayersModel","model","_b","sent","console","error","e_1","cache","dummy","zeros","detect","dispose","detectSyncCPU","results","predictInternal","numBoxes","numClasses","boxArray","dataSync","scoreArray","prev","getBackend","setBackend","getMaxScoresAndClasses","maxScores","classes","boxes2","tensor2d","indexTensor","nonMaxSuppression","indexArray","finalBoxes","createFinalBoxes","detectCPU","nextFrame","data","nonMaxSuppressionAsync","detectSync","_this","boxes","scores","boxArr","scoresArr","classesArr","rawBoxes","NonMaxSuppression","createDetectionArray","filterBoxesAsync","filtred","Promise","all","apply","draw","detections","canvas","ctx","getContext","lablesLen","length","preds","predict","batchSize","postProcessRawPrediction","rescaleBoxes","rawPrediction","layers","isTensorOrTensorArray","push","forEach","layer","probs","mask","numAnchors","anchorsArr","j","anchorsTensor","tensor","classesLength","squeezed","squeeze","processLayer","box","prob","concat","prediction","classesLen","outputWidth","outputHeight","anchorsLen","reshaped","boxxy","sigmoid","slice","boxwh","exp","boxConfidence","boxClassProbs","softmax","classProbs","mul","boxIndex","range","boxHeightIndex","tile","boxWidthindex","expandDims","transpose","flatten","boxIndexGrid","stack","convDims","tensor1d","add","boxesToCorners","boxXY","boxWH","two","boxMins","sub","boxMaxes","width","height","imageDims","filterBoxes","classProbThresh","boxScore","max","boxClasses","argMax","filterThresh","filterMask","greaterEqual","indicesTensor","linspace","toInt","negativeIndicesTensor","fill","indices","where","filteredIndicesTensor","filter","gather","_c","filtredBoxes","filtredScores","filtredClasses","maxes","Number","MIN_VALUE","index","toBeDetermined","scoreArr","iouThresh","zipped","sorted","sort","a","b","out","iou","box1","box2","xi1","Math","yi1","xi2","min","interarea","indexes","count","objects","bbox","maxY","maxX","minY","w","h","classIndex","detection","label","labelIndex","score","x","y","minX","labelsLength","lineWidth","font","det","item","txt","toFixed","color","num","inmin","inmax","map","hsl","strokeStyle","beginPath","rect","stroke","fillStyle","fillRect","fillText","drawObject","darknet_1","darknet_imagenet_labels_1","topK","darknetImagnetLabels","classify","logits","classifyInternal","topk","values","valuesArray","indicesArray","createClassifications","classifySync","classifications"],"mappings":"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CA,eACA,yBACA,UACA,qBACA,eACA,OACA,mBACA,aACA,8BACA,iBACA,WACA,uBACA,SACA,aACA,aACA,WACA,QACA,UACA,kBACA,OACA,mBACA,SACA,sBACA,YACA,0BACA,WACA,QACA,4BACA,mBACA,uBACA,SACA,mBACA,WACA,WACA,UACA,eACA,UACA,YACA,QACA,SACA,SACA,oBACA,eACA,aACA,UACA,qBACA,aACA,aACA,SACA,WACA,aACA,WACA,oBACA,8BACA,mBACA,SACA,WACA,QACA,QACA,kBACA,YACA,cACA,QACA,MACA,iBACA,YACA,UACA,UACA,uBACA,cACA,kBACA,cACA,SACA,QACA,kBACA,cACA,UACA,cACA,aACA,WACA,eACA,mBACA,mBACA,aACA,aACA,WACA,UACA,SACA,aACA,qBACA,KACA,iBACA,kBACA,gBACA,WACA,cACA,6BACA,cACA,WACA,sBACA,aACA,qBACA,UACA,gBACA,UACA,sBACA,SACA,mBACA,gBACA,gBACA,gBACA,OACA,QACA,gBACA,SACA,WACA,8BACA,QACA,QACA,SACA,UACA,2BACA,eACA,SACA,WACA,MACA,yBACA,kBACA,wBACA,MACA,WACA,aACA,mBACA,kBACA,mBACA,eACA,gBACA,QACA,qBACA,UACA,kBACA,aACA,0BACA,SACA,gBACA,sBACA,SACA,QACA,gBACA,eACA,OACA,cACA,iCACA,oBACA,iBACA,YACA,QACA,WACA,qBACA,gBACA,YACA,UACA,WACA,UACA,UACA,SACA,SACA,SACA,QACA,qBACA,cACA,oBACA,OACA,iBACA,eACA,SACA,kBACA,SACA,iBACA,WACA,mBACA,iBACA,sBACA,OACA,sBACA,SACA,eACA,cACA,UACA,mBACA,SACA,aACA,iBACA,kBACA,QACA,QACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,WACA,cACA,YACA,MACA,WACA,qBACA,cACA,SACA,aACA,WACA,WACA,UACA,UACA,gBACA,WACA,UACA,YACA,WACA,QACA,OACA,YACA,WACA,iBACA,QACA,SACA,mBACA,YACA,QACA,aACA,OACA,UACA,UACA,UACA,wBACA,gBACA,cACA,gBACA,SACA,gBACA,gBACA,WACA,sBACA,mBACA,YACA,YACA,cACA,MACA,cACA,OACA,YACA,UACA,UACA,QACA,aACA,UACA,WACA,QACA,WACA,cACA,gBACA,SACA,YACA,gBACA,aACA,aACA,uBACA,YACA,aACA,UACA,cACA,WACA,WACA,aACA,aACA,SACA,WACA,SACA,OACA,cACA,WACA,gBACA,iBACA,aACA,aACA,OACA,aACA,eACA,SACA,gBACA,gBACA,eACA,cACA,OACA,aACA,eACA,uBACA,WACA,eACA,SACA,QACA,MACA,YACA,SACA,YACA,gBACA,cACA,QACA,MACA,MACA,WACA,OACA,UACA,QACA,UACA,QACA,OACA,OACA,SACA,UACA,aACA,QACA,QACA,SACA,OACA,kBACA,kBACA,SACA,cACA,WACA,YACA,UACA,UACA,UACA,OACA,MACA,QACA,QACA,wBACA,QACA,SACA,MACA,UACA,aACA,UACA,aACA,WACA,WACA,SACA,UACA,UACA,gBACA,QACA,cACA,aACA,SACA,YACA,aACA,UACA,cACA,SACA,OACA,YACA,OACA,MACA,UACA,YACA,YACA,cACA,QACA,iBACA,QACA,SACA,MACA,SACA,YACA,cACA,OACA,aACA,UACA,iBACA,eACA,YACA,gBACA,kBACA,UACA,QACA,YACA,eACA,QACA,2BACA,WACA,SACA,YACA,WACA,cACA,UACA,SACA,QACA,yBACA,QACA,aACA,cACA,cACA,YACA,WACA,iBACA,oBACA,UACA,QACA,UACA,gBACA,UACA,kBACA,uBACA,WACA,YACA,gBACA,qBACA,UACA,eACA,YACA,oBACA,cACA,aACA,eACA,WACA,aACA,OACA,QACA,WACA,MACA,cACA,eACA,WACA,SACA,WACA,MACA,aACA,qBACA,aACA,WACA,aACA,eACA,gBACA,qBACA,WACA,QACA,iBACA,mBACA,eACA,eACA,oBACA,gBACA,cACA,oBACA,qBACA,gBACA,iBACA,gBACA,cACA,aACA,eACA,cACA,aACA,cACA,kBACA,cACA,eACA,cACA,YACA,eACA,cACA,aACA,2BACA,cACA,MACA,qBACA,UACA,WACA,YACA,cACA,UACA,OACA,aACA,cACA,cACA,UACA,cACA,aACA,SACA,QACA,eACA,aACA,WACA,eACA,QACA,aACA,YACA,OACA,WACA,QACA,eACA,gBACA,aACA,YACA,UACA,gBACA,YACA,gBACA,cACA,UACA,mBACA,aACA,YACA,aACA,QACA,kBACA,MACA,SACA,gBACA,QACA,aACA,oBACA,sBACA,QACA,UACA,SACA,eACA,aACA,mBACA,qBACA,WACA,WACA,YACA,WACA,UACA,OACA,kBACA,iBACA,WACA,SACA,OACA,YACA,cACA,WACA,iBACA,WACA,WACA,QACA,OACA,WACA,OACA,YACA,WACA,OACA,aACA,aACA,iBACA,aACA,SACA,aACA,OACA,mBACA,UACA,OACA,aACA,QACA,SACA,YACA,MACA,SACA,kBACA,YACA,QACA,aACA,OACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,+BACA,cACA,gBACA,cACA,YACA,cACA,OACA,YACA,SACA,iBACA,YACA,eACA,YACA,mBACA,gBACA,WACA,cACA,eACA,UACA,gBACA,qBACA,cACA,cACA,oBACA,SACA,MACA,MACA,cACA,UACA,gBACA,YACA,SACA,SACA,aACA,WACA,YACA,YACA,UACA,UACA,UACA,oBACA,oBACA,WACA,YACA,cACA,cACA,WACA,WACA,QACA,QACA,OACA,WACA,SACA,aACA,eACA,OACA,iBACA,YACA,aACA,aACA,UACA,cACA,SACA,aACA,eACA,SACA,YACA,aACA,MACA,UACA,YACA,SACA,UACA,QACA,iBACA,QACA,oBACA,oBACA,UACA,OACA,aACA,SACA,YACA,UACA,SACA,YACA,SACA,SACA,QACA,cACA,aACA,SACA,eACA,aACA,OACA,UACA,aACA,SACA,SACA,gBACA,SACA,aACA,WACA,eACA,gBACA,YACA,eACA,UACA,WACA,iBACA,OACA,OACA,QACA,WACA,YACA,aACA,MACA,kBACA,eACA,aACA,aACA,SACA,eACA,YACA,gBACA,aACA,YACA,aACA,WACA,SACA,gBACA,cACA,eACA,WACA,cACA,WACA,mBACA,eACA,mBACA,WACA,YACA,UACA,WACA,iBACA,OACA,SACA,eACA,SACA,SACA,OACA,QACA,WACA,eACA,WACA,UACA,SACA,eACA,kBACA,QACA,gBACA,QACA,MACA,OACA,eACA,QACA,aACA,SACA,UACA,cACA,WACA,cACA,UACA,WACA,cACA,eACA,YACA,YACA,OACA,UACA,aACA,kBACA,cACA,QACA,UACA,aACA,cACA,WACA,mBACA,YACA,SACA,OACA,cACA,cACA,QACA,WACA,YACA,SACA,qBACA,YACA,OACA,QACA,SACA,YACA,WACA,cACA,WACA,YACA,aACA,mBACA,YACA,YACA,OACA,MACA,UACA,UACA,YACA,SACA,UACA,YACA,SACA,SACA,cACA,SACA,QACA,OACA,cACA,SACA,cACA,QACA,mBACA,oBACA,SACA,WACA,aACA,MACA,YACA,SACA,iBACA,aACA,YACA,WACA,QACA,eACA,WACA,QACA,WACA,mBACA,QACA,eACA,QACA,cACA,SACA,SACA,kBACA,YACA,MACA,SACA,gBACA,QACA,QACA,QACA,UACA,mBACA,WACA,aACA,UACA,eACA,SACA,YACA,cACA,OACA,WACA,aACA,cACA,YACA,WACA,YACA,aACA,aACA,UACA,UACA,SACA,eACA,eACA,SACA,gBACA,WACA,kBACA,QACA,YACA,SACA,aACA,gBACA,OACA,QACA,MACA,UACA,cACA,aACA,kBACA,eACA,SACA,YACA,YACA,aACA,aACA,cACA,OACA,gBACA,SACA,qBACA,SACA,UACA,UACA,WACA,cACA,UACA,SACA,OACA,OACA,iBACA,WACA,cACA,cACA,SACA,kBACA,aACA,aACA,cACA,YACA,eACA,cACA,aACA,YACA,SACA,QACA,W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","file":"yolo.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"tf\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"YOLO\", [\"tf\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"YOLO\"] = factory(require(\"tf\"));\n\telse\n\t\troot[\"YOLO\"] = factory(root[\"tf\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import * as tf from \"@tensorflow/tfjs\";\r\nimport { Input, modelSize,ImageOptions} from \"../types\";\r\n\r\n/**\r\n * Performs the pre processing ops for the yolo/darknet CNN\r\n *\r\n * @param input can be  `HTMLCanvasElement` || `HTMLVideoElement` || `ImageData` || `HTMLImageElement` || `Tensor`;\r\n * @param size model input size\r\n * @param options some options regarding image resizing\r\n * \r\n * @return  an array the image original width and height and the preprocessed image tensor \r\n *          original image Width as a `number`\r\n *          original image Height as a `number`\r\n *          a 4D tensor with the shape of `[1,size,size,3]`\r\n */\r\nexport function preProcess(input: Input,size:modelSize,options:ImageOptions): [number, number, tf.Tensor<tf.Rank.R4>] {\r\n  return tf.tidy('preprocessing the yolo/darknet CNN',()=>{\r\n    let image:tf.Tensor;\r\n    if (input instanceof tf.Tensor) {\r\n      image = input;\r\n    } else {\r\n      if ( input instanceof HTMLImageElement ||\r\n           input instanceof HTMLVideoElement ||\r\n           input instanceof ImageData ||\r\n           input instanceof HTMLCanvasElement) {\r\n        image = tf.browser.fromPixels(input);\r\n      } \r\n    }\r\n    const [imgWidth, imgHeight] = [image.shape[1], image.shape[0]];\r\n    // Normalize the image from [0, 255] to [0, 1].\r\n    const normalized = image.toFloat().div(tf.scalar(255));\r\n    let resized = normalized;\r\n    if (normalized.shape[0] !== size || normalized.shape[1] !== size) {\r\n      const alignCorners = options.AlignCorners;\r\n      if (options.ResizeOption === \"Bilinear\") {\r\n        resized = tf.image.resizeNearestNeighbor(normalized as tf.Tensor<tf.Rank.R3>,[size, size],alignCorners);\r\n      } else {\r\n        resized = tf.image.resizeBilinear(normalized as tf.Tensor<tf.Rank.R3>,[size, size],alignCorners);\r\n      }\r\n    }\r\n    // Reshape to a single-element batch so we can pass it to predict.\r\n    const batched = resized.reshape([1, size,size, 3]);\r\n    return [imgWidth, imgHeight, batched];\r\n  }) as [number, number, tf.Tensor<tf.Rank.R4>];\r\n}","import {\n  yolov3Config,\n  tinyYOLOv3Config,\n  tinyYOLOv2Config,\n  tinyYOLOLiteConfig,\n  YOLODetector\n} from \"./detector/index\";\n\nimport {\n  darknetRefrenceConfig,\n  darknet19Config,\n  tinydarknetConfig,\n  DarknetClassifier\n} from \"./classifier/index\";\n\n// these are just alias until i figure out if i decide to add more types of classifiers/detectors\n// tslint:disable-next-line: variable-name\nconst Detector = (options) => new YOLODetector(options);\n// tslint:disable-next-line: variable-name\nconst Classifier = (options) => new DarknetClassifier(options);\n\nexport {\n  yolov3Config,\n  tinyYOLOv3Config,\n  tinyYOLOv2Config,\n  tinyYOLOLiteConfig,\n  Detector,\n  darknetRefrenceConfig,\n  darknet19Config,\n  tinydarknetConfig,\n  Classifier\n};\n","import  { yolov3Config, tinyYOLOv2Config, tinyYOLOv3Config, tinyYOLOLiteConfig } from './config';\nimport  { YOLODetector } from './yolo';\nexport {\n    yolov3Config,\n    tinyYOLOv3Config,\n    tinyYOLOv2Config,\n    tinyYOLOLiteConfig,\n    YOLODetector,\n  };","import { cocoLabels } from \"../shared/coco_labels\";\nimport { YOLODetectorConfig } from './detector';\n\nconst tinyYOLOv3Config: YOLODetectorConfig  = {\n    modelName:'tiny-yolo-v3',\n    modelURL:'',\n    modelSize: 224,\n    iouThreshold: .5,\n    classProbThreshold: .5,\n    maxOutput: 10,\n    resizeOption:{\n        ResizeOption:'Bilinear',\n        AlignCorners:true,\n    },\n    labels: cocoLabels,\n    version: 'v3',  \n    anchors: [[10, 14],[23, 27],[37, 58],[81, 82],[135, 169],[344, 319]],\n    masks: [[3, 4, 5],[0, 1, 2]],\n};\n\nconst tinyYOLOv2Config: YOLODetectorConfig = {\n    modelName:'tiny-yolo-v2',\n    modelURL:'',\n    modelSize: 224,\n    iouThreshold: .5,\n    classProbThreshold: .5,\n    maxOutput: 10,\n    resizeOption:{\n        ResizeOption:'Bilinear',\n        AlignCorners:true,\n    },\n    labels: cocoLabels,\n    version: 'v2',\n    masks: [[0, 1, 2, 3, 4]],\n    anchors: [[0.57273, 0.677385],[1.87446, 2.06253],[3.33843, 5.47434],[7.88282, 3.52778],[9.77052, 9.16828]],\n};\n\nconst yolov3Config: YOLODetectorConfig  = {\n    modelName:'yolo-v3',\n    modelURL:'',\n    modelSize: 224,\n    iouThreshold: .5,\n    classProbThreshold: .5,\n    maxOutput: 10,\n    resizeOption:{\n        ResizeOption:'Bilinear',\n        AlignCorners:true,\n    },\n    labels: cocoLabels,\n    version: 'v3',\n    anchors: [[10, 13],[16, 30],[33, 23],[30, 61],[62, 45],[59, 119],[116, 90],[156, 198],[373, 326]],\n    masks: [[6, 7, 8],[3, 4, 5],[0, 1, 2]],\n};\n\nconst tinyYOLOLiteConfig: YOLODetectorConfig = {\n    modelName:'tiny-yolo-v2-lite',\n    modelURL:'',\n    modelSize: 224,\n    iouThreshold: .2,\n    classProbThreshold: .4,\n    maxOutput: 10,\n    resizeOption:{\n        ResizeOption:'Bilinear',\n        AlignCorners:true,\n    },\n    labels: cocoLabels,\n    version: 'v2',\n    masks: [[0, 1, 2, 3, 4]],\n    anchors:[[1.08,1.19],[3.42,4.41],[6.63,11.38],[9.42,5.11],[16.62,10.52]],\n};\n\nexport {yolov3Config, tinyYOLOv2Config, tinyYOLOv3Config, tinyYOLOLiteConfig };","const cocoLabels:string[] =  [\n    'person',\n    'bicycle',\n    'car',\n    'motorbike',\n    'aeroplane',\n    'bus',\n    'train',\n    'truck',\n    'boat',\n    'traffic light',\n    'fire hydrant',\n    'stop sign',\n    'parking meter',\n    'bench',\n    'bird',\n    'cat',\n    'dog',\n    'horse',\n    'sheep',\n    'cow',\n    'elephant',\n    'bear',\n    'zebra',\n    'giraffe',\n    'backpack',\n    'umbrella',\n    'handbag',\n    'tie',\n    'suitcase',\n    'frisbee',\n    'skis',\n    'snowboard',\n    'sports ball',\n    'kite',\n    'baseball bat',\n    'baseball glove',\n    'skateboard',\n    'surfboard',\n    'tennis racket',\n    'bottle',\n    'wine glass',\n    'cup',\n    'fork',\n    'knife',\n    'spoon',\n    'bowl',\n    'banana',\n    'apple',\n    'sandwich',\n    'orange',\n    'broccoli',\n    'carrot',\n    'hot dog',\n    'pizza',\n    'donut',\n    'cake',\n    'chair',\n    'sofa',\n    'pottedplant',\n    'bed',\n    'diningtable',\n    'toilet',\n    'tvmonitor',\n    'laptop',\n    'mouse',\n    'remote',\n    'keyboard',\n    'cell phone',\n    'microwave',\n    'oven',\n    'toaster',\n    'sink',\n    'refrigerator',\n    'book',\n    'clock',\n    'vase',\n    'scissors',\n    'teddy bear',\n    'hair drier',\n    'toothbrush',\n  ];\n\nexport {cocoLabels };","import { Input , Detection, YOLOVersion , ImageOptions , modelSize} from '../types';\r\nimport { Detector, YOLODetectorConfig } from \"./detector\";\r\nimport { preProcess  } from '../utils/preProcess' ;\r\nimport { draw } from '../utils/draw';\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nexport class YOLODetector implements Detector, YOLODetectorConfig {\r\n\r\n    model:tf.LayersModel;\r\n\r\n    modelName: string;\r\n    modelURL: string;\r\n    version: YOLOVersion;\r\n    modelSize: modelSize;\r\n    iouThreshold: number;\r\n    classProbThreshold: number;\r\n    maxOutput: number;\r\n    labels:string[];\r\n    anchors: number[][];\r\n    masks:number[][];\r\n    resizeOption:ImageOptions;\r\n\r\n    constructor(options:YOLODetectorConfig) {\r\n      this.modelName = options.modelName;\r\n      this.modelURL = options.modelURL;\r\n      this.version= options.version;\r\n      this.modelSize= options.modelSize;\r\n      this.iouThreshold= options.iouThreshold;\r\n      this.classProbThreshold= options.classProbThreshold;\r\n      this.maxOutput = options.maxOutput;\r\n      this.labels= options.labels;\r\n      this.anchors= options.anchors;\r\n      this.masks= options.masks;\r\n      this.resizeOption = options.resizeOption;\r\n    }\r\n\r\n    /**\r\n     * Loads the model from `modelURL`\r\n     */\r\n    public async load():Promise<boolean>{\r\n      if (tf == null) {\r\n        throw new Error(\r\n            `Cannot find TensorFlow.js. If you are using a <script> tag, please ` +\r\n            `also include @tensorflow/tfjs on the page before using this model.`);\r\n      }\r\n      try {\r\n        this.model = await tf.loadLayersModel(this.modelURL);\r\n        return true;\r\n      } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n      }\r\n    }\r\n    /**\r\n     * Caches the model\r\n     */\r\n    public cache():void {\r\n      const dummy = tf.zeros([this.modelSize, this.modelSize, 3]);\r\n      this.detect(dummy);\r\n      tf.dispose(dummy);\r\n    }\r\n\r\n    /**\r\n     * Dispose of the tensors allocated by the model. You should call this when you\r\n     * are done with the detection.\r\n     */\r\n    public dispose():void {\r\n      if (this.model) {\r\n        this.model.dispose();\r\n      }\r\n    }\r\n\r\n    public detectSyncCPU(image: Input): Detection[] {\r\n      const results = this.predictInternal(image);\r\n      const numBoxes = results[0].shape[0]; // || results[1].shape[0];\r\n      const numClasses = results[1].shape[1];\r\n      const boxArray = results[0].dataSync<'float32'>();\r\n      const scoreArray = results[1].dataSync<'float32'>();\r\n      tf.dispose(results);\r\n      const prev = tf.getBackend();\r\n      tf.setBackend('cpu');\r\n      const [maxScores, classes] = this.getMaxScoresAndClasses(scoreArray, numBoxes, numClasses);\r\n      const boxes2 = tf.tensor2d(boxArray, [results[0].shape[0], results[0].shape[1]]);\r\n      const indexTensor = tf.image.nonMaxSuppression(boxes2, maxScores, this.maxOutput, this.iouThreshold, this.classProbThreshold);\r\n      const indexArray = indexTensor.dataSync<'int32'>();\r\n      tf.dispose(boxes2);\r\n      tf.dispose(indexTensor);\r\n      const finalBoxes = this.createFinalBoxes(boxArray, maxScores, classes, indexArray);\r\n      tf.setBackend(prev);\r\n      return finalBoxes;\r\n    }\r\n\r\n    public async detectCPU(image: Input): Promise<Detection[]> {\r\n      await tf.nextFrame();\r\n      const results = this.predictInternal(image);\r\n      const numBoxes = results[0].shape[0]; // || results[1].shape[0];\r\n      const numClasses = results[1].shape[1];\r\n      const boxArray = await results[0].data<'float32'>();\r\n      const scoreArray = await results[1].data<'float32'>();\r\n      tf.dispose(results);\r\n      const prev = tf.getBackend();\r\n      tf.setBackend('cpu');\r\n      const [maxScores, classes] = this.getMaxScoresAndClasses(scoreArray, numBoxes, numClasses);\r\n      const boxes2 = tf.tensor2d(boxArray, [results[0].shape[0], results[0].shape[1]]);\r\n      const indexTensor = await tf.image.nonMaxSuppressionAsync(boxes2, maxScores, this.maxOutput, \r\n                                                                this.iouThreshold, this.classProbThreshold);\r\n      const indexArray = await indexTensor.data<'int32'>();\r\n      tf.dispose(boxes2);\r\n      tf.dispose(indexTensor);\r\n      const finalBoxes = this.createFinalBoxes(boxArray, maxScores, classes, indexArray);\r\n      tf.setBackend(prev);\r\n      return finalBoxes;\r\n    }\r\n\r\n    public detectSync(image:Input): Detection[] {\r\n      const [boxes, scores, classes] = tf.tidy('', () => {\r\n        const results = this.predictInternal(image);\r\n        return this.filterBoxes(results[0], results[1], this.classProbThreshold);\r\n      });\r\n      const boxArr = boxes.dataSync<'float32'>();\r\n      const scoresArr = scores.dataSync<'float32'>();\r\n      const classesArr = classes.dataSync<'int32'>();\r\n      tf.dispose([boxes, scores, classes]);\r\n      const rawBoxes = this.NonMaxSuppression(boxArr, scoresArr, classesArr,this.iouThreshold);\r\n      return  this.createDetectionArray(rawBoxes);\r\n    }\r\n\r\n    public async detect(image:Input):Promise<Detection[]> {\r\n      await tf.nextFrame();\r\n      const results = this.predictInternal(image);\r\n      const filtred = await this.filterBoxesAsync(results[0], results[1], this.classProbThreshold);\r\n      const [boxArr, scoresArr, classesArr] = await  Promise.all([filtred[0].data<'float32'>(),\r\n                                                                  filtred[1].data<'float32'>(),\r\n                                                                  filtred[2].data<'int32'>()]);\r\n      tf.dispose(results);\r\n      tf.dispose(filtred);\r\n      const rawBoxes = this.NonMaxSuppression(boxArr, scoresArr, classesArr,this.iouThreshold);\r\n      const dets = this.createDetectionArray(rawBoxes);\r\n      return dets;\r\n     \r\n    }\r\n\r\n    /**\r\n     * Draw the detections on a `HTMLCanvasElement`\r\n     * @param detections  detections to be drawn \r\n     * @param canvas `HTMLCanvasElement` to draw to \r\n     */\r\n    public draw(detections:Detection[],canvas:HTMLCanvasElement):void{\r\n      const ctx = canvas.getContext('2d');\r\n      const lablesLen = this.labels.length;\r\n      draw(detections,ctx,lablesLen);\r\n    }\r\n    \r\n    /**\r\n     * the main function that handles the infrence it returns a `tf.Tensor[]` that containes the boxes the their scores\r\n     * @param image the input image `Input`\r\n     * \r\n     * @return a `tf.Tensor[]` that contain `[Boxes, Scores]`\r\n     * `Boxes` with a shape of `[numBoxes, 4]`\r\n     * Each `box` is defined by `[maxY, maxX, minY, minX]`\r\n     * Score with a shape of `[numBoxes, numClasses]`\r\n     */\r\n    private predictInternal(image: Input):tf.Tensor[]{\r\n      return tf.tidy(() => {\r\n      const [imgWidth, imgHeight, data] = preProcess(image,this.modelSize,this.resizeOption);\r\n      const preds = this.model.predict(data,{batchSize:1});\r\n      const [boxes, scores] = this.postProcessRawPrediction(preds);\r\n      const scaledBoxes = this.rescaleBoxes(boxes, imgWidth, imgHeight);\r\n      return [scaledBoxes,scores];\r\n      });\r\n    }\r\n\r\n    /**\r\n     * the postprocessing function for the yolo object detection algorithm\r\n     * @param rawPrediction can be a `tf.Tensor` representing a single output (yolov2)\r\n     * or a `tf.Tensor[]` representing multiple outputs (yolov3 has 3 outputs ).\r\n     * each output has the shape of `[size, size, (numClasses+5) * numAnchors]`\r\n     * with the 5 representing : Box Coodinates [4] + BoxConfidence [1]\r\n     * \r\n     * @return a `tf.Tensor[]` that contain `[Boxes, Scores]`\r\n     * `Boxes` with a shape of `[numBoxes, 4]`\r\n     * Each `box` is defined by `[maxY, maxX, minY, minX]`\r\n     * Score with a shape of `[numBoxes, numClasses]`\r\n     */\r\n    private postProcessRawPrediction(rawPrediction:tf.Tensor[] | tf.Tensor):tf.Tensor[] {\r\n      const layers: Array<tf.Tensor<tf.Rank>> = [];\r\n      if (this.isTensorOrTensorArray(rawPrediction)) {\r\n        // its a single Tensor (v2)\r\n        layers.push(rawPrediction);\r\n      } else {\r\n        rawPrediction.forEach(layer=>layers.push(layer));\r\n      }\r\n      const boxes:tf.Tensor[] = [];\r\n      const probs:tf.Tensor[] = [];\r\n\r\n      for (let i = 0; i < layers.length; i++) {\r\n        const mask = this.masks[i];\r\n        const numAnchors = mask.length;\r\n        const anchorsArr = [];\r\n        for (let j = 0; j < numAnchors; j++) {\r\n          anchorsArr.push(this.anchors[mask[j]]);\r\n        }\r\n        const anchorsTensor = tf.tensor(anchorsArr).reshape([1, 1, numAnchors, 2]);\r\n        const classesLength = this.labels.length;\r\n        // remove the batch dim \r\n        const squeezed = layers[i].squeeze([0]);\r\n        const [box, prob] = this.processLayer(squeezed, anchorsTensor, this.modelSize, classesLength, this.version);\r\n        boxes.push(box);\r\n        probs.push(prob);\r\n      }\r\n      const boxesTensor = tf.concat(boxes, 0);\r\n      const probsTensor = tf.concat(probs, 0);\r\n\r\n      return [boxesTensor, probsTensor];\r\n    }\r\n\r\n    /**\r\n     * Process 1 layer of the yolo output \r\n     * @param prediction a `tf.Tensor` representing 1 output of  the neural net\r\n     * @param anchorsTensor a `tf.Tensor` representing the anchors that correspond with the output\r\n     * shape : `[numAnchors, 2]`\r\n     * @param modelSize the input size for the neural net\r\n     * @param classesLen the number of classes/labels that the neural net predicts\r\n     * @param version yolo version `v2` || `v3`\r\n     * \r\n     * @return a `tf.Tensor[]` that containes `[boxes , Scores]` that correspond to the specific layer \r\n     */\r\n    private processLayer(prediction:tf.Tensor, anchorsTensor:tf.Tensor, modelSize:number, classesLen:number, version: string):tf.Tensor[] {\r\n      const [outputWidth, outputHeight] = [prediction.shape[0], prediction.shape[1]];\r\n      const anchorsLen = anchorsTensor.shape[2];\r\n      const numBoxes = outputWidth * outputHeight * anchorsLen;\r\n      //classesLen + 5 =  classesLen + x + y + w + h + obj_score\r\n      const reshaped = tf.reshape(prediction, [outputWidth, outputHeight, anchorsLen, classesLen + 5]);\r\n      let boxxy = tf.sigmoid(reshaped.slice([0, 0, 0, 0], [outputWidth, outputHeight, anchorsLen, 2]));\r\n      let boxwh = tf.exp(reshaped.slice([0, 0, 0, 2], [outputWidth, outputHeight, anchorsLen, 2]));\r\n      const boxConfidence = tf.sigmoid(reshaped.slice([0, 0, 0, 4], [outputWidth, outputHeight, anchorsLen, 1])).reshape([numBoxes, 1]);\r\n      const boxClassProbs = tf.softmax(reshaped.slice([0, 0, 0, 5], [outputWidth, outputHeight, anchorsLen, classesLen]))\r\n                              .reshape([numBoxes, classesLen]);\r\n      const classProbs = tf.mul(boxConfidence, boxClassProbs);\r\n      //prep\r\n      const boxIndex = tf.range(0, outputWidth);\r\n      const boxHeightIndex = tf.tile(boxIndex, [outputHeight]);\r\n      const boxWidthindex = tf.tile(tf.expandDims(boxIndex, 0), [outputWidth, 1]).transpose().flatten();\r\n      const boxIndexGrid = tf.transpose(tf.stack([boxHeightIndex, boxWidthindex])).reshape([outputWidth, outputHeight, 1, 2]);\r\n      const convDims = tf.reshape(tf.tensor1d([outputWidth, outputHeight]), [1, 1, 1, 2]);\r\n      // end\r\n      boxxy = tf.div(tf.add(boxxy, boxIndexGrid), convDims);\r\n      boxwh = tf.mul(boxwh, anchorsTensor);\r\n      if (version === 'v3') {\r\n        boxwh = tf.div(boxwh, tf.tensor([modelSize]));\r\n      } else {\r\n        boxwh = tf.div(boxwh, convDims);\r\n      }\r\n      const boxes = this.boxesToCorners(boxxy, boxwh).reshape([numBoxes, 4]);\r\n      return [boxes, classProbs];\r\n    }\r\n\r\n    /**\r\n     * transforms the yolo bounding box coordinates from `center` to `top left` and joins them.\r\n     * @param boxXY a `tf.Tensor` representing the boxes `X, Y` coordinates.\r\n     * @param boxWH a `tf.Tensor` representing the boxes `Width, Height` values.\r\n     * \r\n     * @returns a `tf.Tensor` representing the transformed & joined boxes coordinates\r\n     */\r\n    private boxesToCorners(boxXY:tf.Tensor, boxWH:tf.Tensor):tf.Tensor {\r\n      const two = tf.scalar(2);\r\n      const boxMins = tf.sub(boxXY, tf.div(boxWH, two));\r\n      const boxMaxes = tf.add(boxXY, tf.div(boxWH, two));\r\n      const dim0 = boxMins.shape[0];\r\n      const dim1 = boxMins.shape[1];\r\n      const dim2 = boxMins.shape[2];\r\n      const size = [dim0, dim1, dim2, 1];\r\n      return tf.concat([\r\n        boxMins.slice([0, 0, 0, 1], size),\r\n        boxMins.slice([0, 0, 0, 0], size),\r\n        boxMaxes.slice([0, 0, 0, 1], size),\r\n        boxMaxes.slice([0, 0, 0, 0], size),\r\n      ], 3);\r\n    }\r\n\r\n    /**\r\n     * rescales the boxes coordinates to the input image dimentions.\r\n     * @param boxes a `tf.Tensor` representing the boxes coordinates. shape : `[numBoxes,4]`\r\n     * @param imgWidth original input image Width.\r\n     * @param imgHeight  original input image Height.\r\n     * \r\n     * @return a `tf.Tensor` representing the scaled boxes coordinates.\r\n     */\r\n    private rescaleBoxes(boxes: tf.Tensor, imgWidth: number, imgHeight: number): tf.Tensor {\r\n      const width = tf.scalar(imgWidth);\r\n      const height = tf.scalar(imgHeight);\r\n      // this for y1 x1 y2 x2\r\n      const imageDims = tf.stack([height, width, height, width]).reshape([1, 4]);\r\n      // this for x y w h\r\n      //const ImageDims = tf.stack([Width, Height, Width, Height]).reshape([1, 4]);\r\n      return boxes.mul(imageDims);\r\n    }\r\n\r\n    /**\r\n     * filters boxes synchronously by a `classProbThresh` Threshold\r\n     * @param boxes a 2D box `tf.Tensor` with the shape of `[numBoxes,4]`\r\n     * @param scores a 2D scores  `tf.Tensor`  with the shape of `[numBoxes,labelsLength]`\r\n     * @param classProbThresh  a number indecating the score threshold defaults to .5\r\n     * \r\n     * @return a  `tf.Tensor[]` constaining `[filtredBoxes, filtredScores, filtredClasses]`\r\n     * \r\n     * normaly this would be inside a tf.tidy\r\n     * so i skipped on the memory managment\r\n     */\r\n    private filterBoxes(boxes: tf.Tensor, scores: tf.Tensor, classProbThresh: number): tf.Tensor[] {\r\n      const boxScore = tf.max(scores, -1);\r\n      const boxClasses = tf.argMax(scores, -1);\r\n      // score filter mask\r\n      const filterThresh = tf.scalar(classProbThresh);\r\n      const filterMask = tf.greaterEqual(boxScore, filterThresh);\r\n\r\n      // this is somewhat a replacment for tf.boolean_mask\r\n      const indicesTensor = tf.linspace(0, boxes.shape[0] - 1, boxes.shape[0]).toInt();\r\n      const negativeIndicesTensor = tf.fill([boxes.shape[0]], -1, \"int32\");\r\n      const indices = tf.where(filterMask, indicesTensor, negativeIndicesTensor);\r\n      const filteredIndicesTensor = tf.tensor1d(indices.dataSync<'int32'> ().filter(i => i >= 0));\r\n      return [boxes.gather(filteredIndicesTensor), boxScore.gather(filteredIndicesTensor), boxClasses.gather(filteredIndicesTensor)];\r\n    }\r\n\r\n    /**\r\n     * filters boxes asynchronously by a `classProbThresh` Threshold\r\n     * @param boxes a 2D box `tf.Tensor` with the shape of `[numBoxes,4]`\r\n     * @param scores a 2D scores  `tf.Tensor`  with the shape of `[numBoxes,labelsLength]`\r\n     * @param classProbThresh  a number indecating the score threshold defaults to .5\r\n     * \r\n     * @return a  `tf.Tensor[]` constaining `[filtredBoxes, filtredScores, filtredClasses]`\r\n     * \r\n     * this is gooing to be called outside tf.tidy so we need to do memory managment manually\r\n     * the input & output tensors will be clean outside so we should cleaned only the local variables\r\n     */\r\n    private async filterBoxesAsync(boxes: tf.Tensor, scores: tf.Tensor, classProbThresh = .5): Promise < tf.Tensor[] > {\r\n      const boxScore = tf.max(scores, -1);\r\n      const boxClasses = tf.argMax(scores, -1);\r\n      // filter mask\r\n      const filterThresh = tf.scalar(classProbThresh);\r\n      const filterMask = tf.greaterEqual(boxScore, filterThresh);\r\n      // i think we can replace this with tf.setdiff1dAsync(x, y)\r\n      // https://js.tensorflow.org/api/latest/#setdiff1dAsync\r\n      const range = tf.linspace(0, boxes.shape[0] - 1, boxes.shape[0]);\r\n      const indicesTensor = range.toInt();\r\n      const negativeIndicesTensor = tf.fill([boxes.shape[0]], -1, \"int32\");\r\n      const indices = tf.where(filterMask, indicesTensor, negativeIndicesTensor);\r\n      const filteredIndicesTensor = tf.tensor1d((await indices.data<'int32'>()).filter(i => i >= 0));\r\n      //  END\r\n      const filtredBoxes = boxes.gather(filteredIndicesTensor);\r\n      const filtredScores = boxScore.gather(filteredIndicesTensor);\r\n      const filtredClasses = boxClasses.gather(filteredIndicesTensor);\r\n\r\n      tf.dispose([boxScore,boxClasses,filterThresh, filterMask,\r\n                  range, indicesTensor, negativeIndicesTensor, \r\n                  indices, filteredIndicesTensor,]);\r\n\r\n      return [filtredBoxes, filtredScores, filtredClasses];\r\n    }\r\n    \r\n    /**\r\n     * \r\n     * @param scores \r\n     * @param numBoxes \r\n     * @param numClasses \r\n     */\r\n    private getMaxScoresAndClasses(scores:Float32Array, numBoxes:number, numClasses:number):[number[], number[]]{\r\n      const maxes = [];\r\n      const classes = [];\r\n      for (let i = 0; i < numBoxes; i++) {\r\n        let max = Number.MIN_VALUE;\r\n        let index = -1;\r\n        for (let j = 0; j < numClasses; j++) {\r\n          if (scores[i * numClasses + j] > max) {\r\n            max = scores[i * numClasses + j];\r\n            index = j;\r\n          }\r\n        }\r\n        maxes[i] = max;\r\n        classes[i] = index;\r\n      }\r\n      return [maxes, classes];\r\n    }\r\n\r\n    /** \r\n     * a small utility check to see if `toBeDetermined` is a `tf.Tensor` or a `tf.Tensor[]`\r\n     * \r\n     * @param  toBeDetermined `tf.Tensor` || `tf.Tensor[]`\r\n     * \r\n     * @returns a `boolean` indicating if it's a `tf.Tensor` or a `tf.Tensor[]`\r\n     */\r\n    private isTensorOrTensorArray(toBeDetermined: tf.Tensor | tf.Tensor[]): toBeDetermined is tf.Tensor {\r\n      return (toBeDetermined as tf.Tensor).shape ? true : false;\r\n    }\r\n\r\n    /** \r\n     * Implements Non-max Suppression\r\n     * \r\n     * @param boxArr an array containing the boxes coords:Length must be `numBoxes*4`\r\n     * @param scoreArr an array  containing the boxes scores probability:Length must be `numBoxes`\r\n     * @param classesArr an array  containing the detection label index:Length must be `numBoxes`\r\n     * @param iou_thresh  Non-max Suppression Threshold\r\n     * \r\n     * @return RawDetection \r\n     */\r\n    private NonMaxSuppression(boxArr:Float32Array, scoreArr:Float32Array, classesArr:Int32Array,iouThresh:number): any[] {\r\n      const zipped: any[] = [];\r\n      for (let i = 0; i < scoreArr.length; i += 1) {\r\n        zipped.push([\r\n          [boxArr[4 * i], boxArr[(4 * i) + 1], boxArr[(4 * i) + 2], boxArr[(4 * i) + 3]],\r\n          scoreArr[i],\r\n          classesArr[i],\r\n        ]);\r\n      }\r\n      // Sort by descending order of scores (first index of zipped array)\r\n      const sorted = zipped.sort((a, b) =>b[1]-a[1]);\r\n      const out = [];\r\n      // Greedily go through boxes in descending score order and only\r\n      // return boxes that are below the IoU threshold.\r\n      for (let i = 0; i < sorted.length; i += 1) {\r\n        let push = true;\r\n        for (let j = 0; j < out.length; j += 1) {\r\n          const IOU = this.iou(out[j][0], sorted[i][0]);\r\n          if (IOU > iouThresh) {\r\n            push = false;\r\n            break;\r\n          }\r\n        }\r\n        if (push) {\r\n          out.push(sorted[i]);\r\n        }\r\n      }\r\n      return out;\r\n    }\r\n\r\n    /** \r\n     * Implement the intersection over union (IoU) between box1 and box2\r\n     * \r\n     * @param box1 -- first box, number list with coordinates `(x1, y1, x2, y2)`\r\n     * @param box2 -- second box, number list with coordinates `(x1, y1, x2, y2)`\r\n     * \r\n     * @return the value of `interarea` /  `unionarea`\r\n     */\r\n    private iou(box1: number[], box2: number[]): number {\r\n       // Calculate the (y1, x1, y2, x2) coordinates of the intersection of box1 and box2. Calculate its Area.\r\n       const xi1 = Math.max(box1[0], box2[0]);\r\n       const yi1 = Math.max(box1[1], box2[1]);\r\n       const xi2 = Math.min(box1[2], box2[2]);\r\n       const yi2 = Math.min(box1[3], box2[3]);\r\n       const interarea = (yi2 - yi1) * (xi2 - xi1);\r\n       // Calculate the Union area by using Formula: Union(A,B) = A + B - Inter(A,B)\r\n       const box1area = (box1[2] - box1[0]) * (box1[3] - box1[1]);\r\n       const box2area = (box2[2] - box2[0]) * (box2[3] - box2[1]);\r\n       const unionarea = (box1area + box2area) - interarea;\r\n       // compute the IoU\r\n       return interarea / unionarea;\r\n    }\r\n\r\n    /** \r\n     * a function similar to `createDetectionArray()` that takes the yolo output and returns a `Detection[]`\r\n     * @param boxes  a Float32Array containing the boxes coords:Length must be `numBoxes*4`\r\n     * @param scores an array containing the boxes scores probability:Length must be `numBoxes`\r\n     * @param classes an array  containing the detection label index:Length must be `numBoxes`\r\n     * @param indexes a Float32Array containing the indexes of the boxes that we want to keep:Length must be `numBoxes`\r\n     * \r\n     * @return a `Detection[]` with the final collected boxes\r\n     */\r\n    private createFinalBoxes(boxes: Float32Array, scores: number[], classes: number[], indexes: Int32Array): Detection[] {\r\n      const count = indexes.length;\r\n      const objects: Detection[] = [];\r\n      for (let i = 0; i < count; i++) {\r\n        const bbox = [];\r\n        for (let j = 0; j < 4; j++) {\r\n          bbox[j] = boxes[indexes[i] * 4 + j];\r\n        }\r\n        const maxY = bbox[0];\r\n        const maxX = bbox[1];\r\n        const minY = bbox[2];\r\n        const minX = bbox[3];\r\n        const w = minX -maxX ;\r\n        const h = minY- maxY ;\r\n        // const x = maxX + (w / 2);\r\n        // const y = maxY - (h / 2);\r\n        const classIndex = classes[indexes[i]];\r\n        const detection = {\r\n          label: this.labels[classIndex],\r\n          labelIndex: classIndex,\r\n          score: scores[indexes[i]],\r\n          x: maxX,\r\n          y: maxY,\r\n          w,\r\n          h,\r\n        };\r\n        objects.push(detection);\r\n      }\r\n      return objects;\r\n    }\r\n\r\n    /**\r\n     * The final phase in the post processing that outputs the final `Detection[]`\r\n     * \r\n     * @param finalBoxes an array containing the raw box information\r\n     * \r\n     * @return a `Detection[]` with the final collected boxes\r\n     */\r\n    private createDetectionArray(finalBoxes:any[]):Detection[] {\r\n      const detections:Detection[] = [];\r\n      for (let i = 0; i < finalBoxes.length; i += 1) {\r\n        // add any out put you want \r\n        // choose output format \r\n        // currently its x1,y1,x2,y2\r\n        // x1 = x - (w/2)\r\n        // y1 = y - (h/2)\r\n        // x2 = x + (w/2)\r\n        // y2 = y + (h/2)\r\n        // as for x y w h \r\n        // Warning !  x and y are for the center of the bounding box\r\n        // w = x2-x1 \r\n        // h = y2-y1\r\n        // x = x1 + (w/2) || x2 - (w/2) \r\n        // y = y1 - (h/2) || y2 + (h/2)\r\n        const [maxY, maxX, minY, minX] =finalBoxes[i][0];\r\n        const classIndex = finalBoxes[i][2];\r\n        // // Warning !  x and y are for the center of the bounding box\r\n        // const w = minX - maxX;\r\n        // const h = minY - maxY;\r\n        const detection:Detection = {\r\n          labelIndex:classIndex,\r\n          label:this.labels[classIndex],\r\n          score: finalBoxes[i][1],\r\n          x:maxX,\r\n          y:maxY,\r\n          w:minX - maxX,\r\n          h:minY - maxY,\r\n        };\r\n        detections.push(detection);\r\n      }\r\n      return detections;\r\n    }\r\n}","import {Detection} from '../types';\n\nexport function draw(detections:Detection[], ctx: CanvasRenderingContext2D, labelsLength:number) {\n    ctx.lineWidth = 1.5;\n    ctx.font = '13px Segoe UI';\n    detections.forEach(det => {\n        drawObject(det, ctx, labelsLength);\n    });\n}\n\nfunction drawObject(item:Detection, ctx:CanvasRenderingContext2D, max:number) {\n    const txt = ` ${item.label} : ${(item.score*100).toFixed(1)}%`;\n    const color = hsl(item.labelIndex, 0, 50);\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.rect(item.x,item.y,item.w, item.h);\n    ctx.stroke();\n    ctx.fillStyle = color;\n    if (item.y - 25 >= 0) {\n      //Box on top\n      ctx.fillRect(item.x-1.5, item.y-1.5, 90, -15);\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(txt, item.x, item.y - 5);\n    } else {\n      //Box Inside\n      ctx.fillRect(item.x-1.5,  item.y-1.5, 90, 20);\n      ctx.fillStyle = \"#000000\";\n      ctx.fillText(txt, item.x, item.y + 12);\n    }\n}\nfunction hsl(num:number, min:number, max:number) {\n    return `hsla(${map(num, min, max)}, 100%, 50%,1)`;\n}\nfunction map(num:number, inmin:number, inmax:number) {\n    return ((num - inmin) * 360) / (inmax - inmin);\n}","import  { darknetRefrenceConfig, darknet19Config, tinydarknetConfig  } from './config';\r\nimport  { DarknetClassifier } from './darknet';\r\nexport {\r\n    darknetRefrenceConfig,\r\n    darknet19Config,\r\n    tinydarknetConfig,\r\n    DarknetClassifier,\r\n  };","import { ClassifierConfig } from \"./classifier\";\r\nimport { darknetImagnetLabels } from \"../shared/darknet_imagenet_labels\";\r\nconst darknetRefrenceConfig: ClassifierConfig = {\r\n    modelName:'darknet-refrence',\r\n    modelURL:'',\r\n    modelSize: 256,\r\n    classProbThreshold: .6,\r\n    topK: 5,\r\n    resizeOption:{\r\n        ResizeOption:'Bilinear',\r\n        AlignCorners:true,\r\n    },\r\n    labels: darknetImagnetLabels,\r\n};\r\nconst tinydarknetConfig: ClassifierConfig = {\r\n    modelName:'tiny-darknet',\r\n    modelURL:'',\r\n    modelSize: 224,\r\n    classProbThreshold: .6,\r\n    topK: 5,\r\n    resizeOption:{\r\n        ResizeOption:'Bilinear',\r\n        AlignCorners:true,\r\n    },\r\n    labels: darknetImagnetLabels,\r\n};\r\nconst darknet19Config: ClassifierConfig = {\r\n    modelName:'darknet-19',\r\n    modelURL:'',\r\n    modelSize: 416,\r\n    classProbThreshold: .6,\r\n    topK: 5,\r\n    resizeOption:{\r\n        ResizeOption:'Bilinear',\r\n        AlignCorners:true,\r\n    },\r\n    labels: darknetImagnetLabels,\r\n};\r\n\r\nexport {darknetRefrenceConfig, darknet19Config, tinydarknetConfig  };","const darknetImagnetLabels:string[] = [\r\n  \"kit fox\",\r\n  \"English setter\",\r\n  \"Siberian husky\",\r\n  \"Australian terrier\",\r\n  \"English springer\",\r\n  \"grey whale\",\r\n  \"lesser panda\",\r\n  \"Egyptian cat\",\r\n  \"ibex\",\r\n  \"Persian cat\",\r\n  \"cougar\",\r\n  \"gazelle\",\r\n  \"porcupine\",\r\n  \"sea lion\",\r\n  \"malamute\",\r\n  \"badger\",\r\n  \"Great Dane\",\r\n  \"Walker hound\",\r\n  \"Welsh springer spaniel\",\r\n  \"whippet\",\r\n  \"Scottish deerhound\",\r\n  \"killer whale\",\r\n  \"mink\",\r\n  \"African elephant\",\r\n  \"Weimaraner\",\r\n  \"soft-coated wheaten terrier\",\r\n  \"Dandie Dinmont\",\r\n  \"red wolf\",\r\n  \"Old English sheepdog\",\r\n  \"jaguar\",\r\n  \"otterhound\",\r\n  \"bloodhound\",\r\n  \"Airedale\",\r\n  \"hyena\",\r\n  \"meerkat\",\r\n  \"giant schnauzer\",\r\n  \"titi\",\r\n  \"three-toed sloth\",\r\n  \"sorrel\",\r\n  \"black-footed ferret\",\r\n  \"dalmatian\",\r\n  \"black-and-tan coonhound\",\r\n  \"papillon\",\r\n  \"skunk\",\r\n  \"Staffordshire bullterrier\",\r\n  \"Mexican hairless\",\r\n  \"Bouvier des Flandres\",\r\n  \"weasel\",\r\n  \"miniature poodle\",\r\n  \"Cardigan\",\r\n  \"malinois\",\r\n  \"bighorn\",\r\n  \"fox squirrel\",\r\n  \"colobus\",\r\n  \"tiger cat\",\r\n  \"Lhasa\",\r\n  \"impala\",\r\n  \"coyote\",\r\n  \"Yorkshire terrier\",\r\n  \"Newfoundland\",\r\n  \"brown bear\",\r\n  \"red fox\",\r\n  \"Norwegian elkhound\",\r\n  \"Rottweiler\",\r\n  \"hartebeest\",\r\n  \"Saluki\",\r\n  \"grey fox\",\r\n  \"schipperke\",\r\n  \"Pekinese\",\r\n  \"Brabancon griffon\",\r\n  \"West Highland white terrier\",\r\n  \"Sealyham terrier\",\r\n  \"guenon\",\r\n  \"mongoose\",\r\n  \"indri\",\r\n  \"tiger\",\r\n  \"Irish wolfhound\",\r\n  \"wild boar\",\r\n  \"EntleBucher\",\r\n  \"zebra\",\r\n  \"ram\",\r\n  \"French bulldog\",\r\n  \"orangutan\",\r\n  \"basenji\",\r\n  \"leopard\",\r\n  \"Bernese mountain dog\",\r\n  \"Maltese dog\",\r\n  \"Norfolk terrier\",\r\n  \"toy terrier\",\r\n  \"vizsla\",\r\n  \"cairn\",\r\n  \"squirrel monkey\",\r\n  \"groenendael\",\r\n  \"clumber\",\r\n  \"Siamese cat\",\r\n  \"chimpanzee\",\r\n  \"komondor\",\r\n  \"Afghan hound\",\r\n  \"Japanese spaniel\",\r\n  \"proboscis monkey\",\r\n  \"guinea pig\",\r\n  \"white wolf\",\r\n  \"ice bear\",\r\n  \"gorilla\",\r\n  \"borzoi\",\r\n  \"toy poodle\",\r\n  \"Kerry blue terrier\",\r\n  \"ox\",\r\n  \"Scotch terrier\",\r\n  \"Tibetan mastiff\",\r\n  \"spider monkey\",\r\n  \"Doberman\",\r\n  \"Boston bull\",\r\n  \"Greater Swiss Mountain dog\",\r\n  \"Appenzeller\",\r\n  \"Shih-Tzu\",\r\n  \"Irish water spaniel\",\r\n  \"Pomeranian\",\r\n  \"Bedlington terrier\",\r\n  \"warthog\",\r\n  \"Arabian camel\",\r\n  \"siamang\",\r\n  \"miniature schnauzer\",\r\n  \"collie\",\r\n  \"golden retriever\",\r\n  \"Irish terrier\",\r\n  \"affenpinscher\",\r\n  \"Border collie\",\r\n  \"hare\",\r\n  \"boxer\",\r\n  \"silky terrier\",\r\n  \"beagle\",\r\n  \"Leonberg\",\r\n  \"German short-haired pointer\",\r\n  \"patas\",\r\n  \"dhole\",\r\n  \"baboon\",\r\n  \"macaque\",\r\n  \"Chesapeake Bay retriever\",\r\n  \"bull mastiff\",\r\n  \"kuvasz\",\r\n  \"capuchin\",\r\n  \"pug\",\r\n  \"curly-coated retriever\",\r\n  \"Norwich terrier\",\r\n  \"flat-coated retriever\",\r\n  \"hog\",\r\n  \"keeshond\",\r\n  \"Eskimo dog\",\r\n  \"Brittany spaniel\",\r\n  \"standard poodle\",\r\n  \"Lakeland terrier\",\r\n  \"snow leopard\",\r\n  \"Gordon setter\",\r\n  \"dingo\",\r\n  \"standard schnauzer\",\r\n  \"hamster\",\r\n  \"Tibetan terrier\",\r\n  \"Arctic fox\",\r\n  \"wire-haired fox terrier\",\r\n  \"basset\",\r\n  \"water buffalo\",\r\n  \"American black bear\",\r\n  \"Angora\",\r\n  \"bison\",\r\n  \"howler monkey\",\r\n  \"hippopotamus\",\r\n  \"chow\",\r\n  \"giant panda\",\r\n  \"American Staffordshire terrier\",\r\n  \"Shetland sheepdog\",\r\n  \"Great Pyrenees\",\r\n  \"Chihuahua\",\r\n  \"tabby\",\r\n  \"marmoset\",\r\n  \"Labrador retriever\",\r\n  \"Saint Bernard\",\r\n  \"armadillo\",\r\n  \"Samoyed\",\r\n  \"bluetick\",\r\n  \"redbone\",\r\n  \"polecat\",\r\n  \"marmot\",\r\n  \"kelpie\",\r\n  \"gibbon\",\r\n  \"llama\",\r\n  \"miniature pinscher\",\r\n  \"wood rabbit\",\r\n  \"Italian greyhound\",\r\n  \"lion\",\r\n  \"cocker spaniel\",\r\n  \"Irish setter\",\r\n  \"dugong\",\r\n  \"Indian elephant\",\r\n  \"beaver\",\r\n  \"Sussex spaniel\",\r\n  \"Pembroke\",\r\n  \"Blenheim spaniel\",\r\n  \"Madagascar cat\",\r\n  \"Rhodesian ridgeback\",\r\n  \"lynx\",\r\n  \"African hunting dog\",\r\n  \"langur\",\r\n  \"Ibizan hound\",\r\n  \"timber wolf\",\r\n  \"cheetah\",\r\n  \"English foxhound\",\r\n  \"briard\",\r\n  \"sloth bear\",\r\n  \"Border terrier\",\r\n  \"German shepherd\",\r\n  \"otter\",\r\n  \"koala\",\r\n  \"tusker\",\r\n  \"echidna\",\r\n  \"wallaby\",\r\n  \"platypus\",\r\n  \"wombat\",\r\n  \"revolver\",\r\n  \"umbrella\",\r\n  \"schooner\",\r\n  \"soccer ball\",\r\n  \"accordion\",\r\n  \"ant\",\r\n  \"starfish\",\r\n  \"chambered nautilus\",\r\n  \"grand piano\",\r\n  \"laptop\",\r\n  \"strawberry\",\r\n  \"airliner\",\r\n  \"warplane\",\r\n  \"airship\",\r\n  \"balloon\",\r\n  \"space shuttle\",\r\n  \"fireboat\",\r\n  \"gondola\",\r\n  \"speedboat\",\r\n  \"lifeboat\",\r\n  \"canoe\",\r\n  \"yawl\",\r\n  \"catamaran\",\r\n  \"trimaran\",\r\n  \"container ship\",\r\n  \"liner\",\r\n  \"pirate\",\r\n  \"aircraft carrier\",\r\n  \"submarine\",\r\n  \"wreck\",\r\n  \"half track\",\r\n  \"tank\",\r\n  \"missile\",\r\n  \"bobsled\",\r\n  \"dogsled\",\r\n  \"bicycle-built-for-two\",\r\n  \"mountain bike\",\r\n  \"freight car\",\r\n  \"passenger car\",\r\n  \"barrow\",\r\n  \"shopping cart\",\r\n  \"motor scooter\",\r\n  \"forklift\",\r\n  \"electric locomotive\",\r\n  \"steam locomotive\",\r\n  \"amphibian\",\r\n  \"ambulance\",\r\n  \"beach wagon\",\r\n  \"cab\",\r\n  \"convertible\",\r\n  \"jeep\",\r\n  \"limousine\",\r\n  \"minivan\",\r\n  \"Model T\",\r\n  \"racer\",\r\n  \"sports car\",\r\n  \"go-kart\",\r\n  \"golfcart\",\r\n  \"moped\",\r\n  \"snowplow\",\r\n  \"fire engine\",\r\n  \"garbage truck\",\r\n  \"pickup\",\r\n  \"tow truck\",\r\n  \"trailer truck\",\r\n  \"moving van\",\r\n  \"police van\",\r\n  \"recreational vehicle\",\r\n  \"streetcar\",\r\n  \"snowmobile\",\r\n  \"tractor\",\r\n  \"mobile home\",\r\n  \"tricycle\",\r\n  \"unicycle\",\r\n  \"horse cart\",\r\n  \"jinrikisha\",\r\n  \"oxcart\",\r\n  \"bassinet\",\r\n  \"cradle\",\r\n  \"crib\",\r\n  \"four-poster\",\r\n  \"bookcase\",\r\n  \"china cabinet\",\r\n  \"medicine chest\",\r\n  \"chiffonier\",\r\n  \"table lamp\",\r\n  \"file\",\r\n  \"park bench\",\r\n  \"barber chair\",\r\n  \"throne\",\r\n  \"folding chair\",\r\n  \"rocking chair\",\r\n  \"studio couch\",\r\n  \"toilet seat\",\r\n  \"desk\",\r\n  \"pool table\",\r\n  \"dining table\",\r\n  \"entertainment center\",\r\n  \"wardrobe\",\r\n  \"Granny Smith\",\r\n  \"orange\",\r\n  \"lemon\",\r\n  \"fig\",\r\n  \"pineapple\",\r\n  \"banana\",\r\n  \"jackfruit\",\r\n  \"custard apple\",\r\n  \"pomegranate\",\r\n  \"acorn\",\r\n  \"hip\",\r\n  \"ear\",\r\n  \"rapeseed\",\r\n  \"corn\",\r\n  \"buckeye\",\r\n  \"organ\",\r\n  \"upright\",\r\n  \"chime\",\r\n  \"drum\",\r\n  \"gong\",\r\n  \"maraca\",\r\n  \"marimba\",\r\n  \"steel drum\",\r\n  \"banjo\",\r\n  \"cello\",\r\n  \"violin\",\r\n  \"harp\",\r\n  \"acoustic guitar\",\r\n  \"electric guitar\",\r\n  \"cornet\",\r\n  \"French horn\",\r\n  \"trombone\",\r\n  \"harmonica\",\r\n  \"ocarina\",\r\n  \"panpipe\",\r\n  \"bassoon\",\r\n  \"oboe\",\r\n  \"sax\",\r\n  \"flute\",\r\n  \"daisy\",\r\n  \"yellow lady's slipper\",\r\n  \"cliff\",\r\n  \"valley\",\r\n  \"alp\",\r\n  \"volcano\",\r\n  \"promontory\",\r\n  \"sandbar\",\r\n  \"coral reef\",\r\n  \"lakeside\",\r\n  \"seashore\",\r\n  \"geyser\",\r\n  \"hatchet\",\r\n  \"cleaver\",\r\n  \"letter opener\",\r\n  \"plane\",\r\n  \"power drill\",\r\n  \"lawn mower\",\r\n  \"hammer\",\r\n  \"corkscrew\",\r\n  \"can opener\",\r\n  \"plunger\",\r\n  \"screwdriver\",\r\n  \"shovel\",\r\n  \"plow\",\r\n  \"chain saw\",\r\n  \"cock\",\r\n  \"hen\",\r\n  \"ostrich\",\r\n  \"brambling\",\r\n  \"goldfinch\",\r\n  \"house finch\",\r\n  \"junco\",\r\n  \"indigo bunting\",\r\n  \"robin\",\r\n  \"bulbul\",\r\n  \"jay\",\r\n  \"magpie\",\r\n  \"chickadee\",\r\n  \"water ouzel\",\r\n  \"kite\",\r\n  \"bald eagle\",\r\n  \"vulture\",\r\n  \"great grey owl\",\r\n  \"black grouse\",\r\n  \"ptarmigan\",\r\n  \"ruffed grouse\",\r\n  \"prairie chicken\",\r\n  \"peacock\",\r\n  \"quail\",\r\n  \"partridge\",\r\n  \"African grey\",\r\n  \"macaw\",\r\n  \"sulphur-crested cockatoo\",\r\n  \"lorikeet\",\r\n  \"coucal\",\r\n  \"bee eater\",\r\n  \"hornbill\",\r\n  \"hummingbird\",\r\n  \"jacamar\",\r\n  \"toucan\",\r\n  \"drake\",\r\n  \"red-breasted merganser\",\r\n  \"goose\",\r\n  \"black swan\",\r\n  \"white stork\",\r\n  \"black stork\",\r\n  \"spoonbill\",\r\n  \"flamingo\",\r\n  \"American egret\",\r\n  \"little blue heron\",\r\n  \"bittern\",\r\n  \"crane\",\r\n  \"limpkin\",\r\n  \"American coot\",\r\n  \"bustard\",\r\n  \"ruddy turnstone\",\r\n  \"red-backed sandpiper\",\r\n  \"redshank\",\r\n  \"dowitcher\",\r\n  \"oystercatcher\",\r\n  \"European gallinule\",\r\n  \"pelican\",\r\n  \"king penguin\",\r\n  \"albatross\",\r\n  \"great white shark\",\r\n  \"tiger shark\",\r\n  \"hammerhead\",\r\n  \"electric ray\",\r\n  \"stingray\",\r\n  \"barracouta\",\r\n  \"coho\",\r\n  \"tench\",\r\n  \"goldfish\",\r\n  \"eel\",\r\n  \"rock beauty\",\r\n  \"anemone fish\",\r\n  \"lionfish\",\r\n  \"puffer\",\r\n  \"sturgeon\",\r\n  \"gar\",\r\n  \"loggerhead\",\r\n  \"leatherback turtle\",\r\n  \"mud turtle\",\r\n  \"terrapin\",\r\n  \"box turtle\",\r\n  \"banded gecko\",\r\n  \"common iguana\",\r\n  \"American chameleon\",\r\n  \"whiptail\",\r\n  \"agama\",\r\n  \"frilled lizard\",\r\n  \"alligator lizard\",\r\n  \"Gila monster\",\r\n  \"green lizard\",\r\n  \"African chameleon\",\r\n  \"Komodo dragon\",\r\n  \"triceratops\",\r\n  \"African crocodile\",\r\n  \"American alligator\",\r\n  \"thunder snake\",\r\n  \"ringneck snake\",\r\n  \"hognose snake\",\r\n  \"green snake\",\r\n  \"king snake\",\r\n  \"garter snake\",\r\n  \"water snake\",\r\n  \"vine snake\",\r\n  \"night snake\",\r\n  \"boa constrictor\",\r\n  \"rock python\",\r\n  \"Indian cobra\",\r\n  \"green mamba\",\r\n  \"sea snake\",\r\n  \"horned viper\",\r\n  \"diamondback\",\r\n  \"sidewinder\",\r\n  \"European fire salamander\",\r\n  \"common newt\",\r\n  \"eft\",\r\n  \"spotted salamander\",\r\n  \"axolotl\",\r\n  \"bullfrog\",\r\n  \"tree frog\",\r\n  \"tailed frog\",\r\n  \"whistle\",\r\n  \"wing\",\r\n  \"paintbrush\",\r\n  \"hand blower\",\r\n  \"oxygen mask\",\r\n  \"snorkel\",\r\n  \"loudspeaker\",\r\n  \"microphone\",\r\n  \"screen\",\r\n  \"mouse\",\r\n  \"electric fan\",\r\n  \"oil filter\",\r\n  \"strainer\",\r\n  \"space heater\",\r\n  \"stove\",\r\n  \"guillotine\",\r\n  \"barometer\",\r\n  \"rule\",\r\n  \"odometer\",\r\n  \"scale\",\r\n  \"analog clock\",\r\n  \"digital clock\",\r\n  \"wall clock\",\r\n  \"hourglass\",\r\n  \"sundial\",\r\n  \"parking meter\",\r\n  \"stopwatch\",\r\n  \"digital watch\",\r\n  \"stethoscope\",\r\n  \"syringe\",\r\n  \"magnetic compass\",\r\n  \"binoculars\",\r\n  \"projector\",\r\n  \"sunglasses\",\r\n  \"loupe\",\r\n  \"radio telescope\",\r\n  \"bow\",\r\n  \"cannon\",\r\n  \"assault rifle\",\r\n  \"rifle\",\r\n  \"projectile\",\r\n  \"computer keyboard\",\r\n  \"typewriter keyboard\",\r\n  \"crane\",\r\n  \"lighter\",\r\n  \"abacus\",\r\n  \"cash machine\",\r\n  \"slide rule\",\r\n  \"desktop computer\",\r\n  \"hand-held computer\",\r\n  \"notebook\",\r\n  \"web site\",\r\n  \"harvester\",\r\n  \"thresher\",\r\n  \"printer\",\r\n  \"slot\",\r\n  \"vending machine\",\r\n  \"sewing machine\",\r\n  \"joystick\",\r\n  \"switch\",\r\n  \"hook\",\r\n  \"car wheel\",\r\n  \"paddlewheel\",\r\n  \"pinwheel\",\r\n  \"potter's wheel\",\r\n  \"gas pump\",\r\n  \"carousel\",\r\n  \"swing\",\r\n  \"reel\",\r\n  \"radiator\",\r\n  \"puck\",\r\n  \"hard disc\",\r\n  \"sunglass\",\r\n  \"pick\",\r\n  \"car mirror\",\r\n  \"solar dish\",\r\n  \"remote control\",\r\n  \"disk brake\",\r\n  \"buckle\",\r\n  \"hair slide\",\r\n  \"knot\",\r\n  \"combination lock\",\r\n  \"padlock\",\r\n  \"nail\",\r\n  \"safety pin\",\r\n  \"screw\",\r\n  \"muzzle\",\r\n  \"seat belt\",\r\n  \"ski\",\r\n  \"candle\",\r\n  \"jack-o'-lantern\",\r\n  \"spotlight\",\r\n  \"torch\",\r\n  \"neck brace\",\r\n  \"pier\",\r\n  \"tripod\",\r\n  \"maypole\",\r\n  \"mousetrap\",\r\n  \"spider web\",\r\n  \"trilobite\",\r\n  \"harvestman\",\r\n  \"scorpion\",\r\n  \"black and gold garden spider\",\r\n  \"barn spider\",\r\n  \"garden spider\",\r\n  \"black widow\",\r\n  \"tarantula\",\r\n  \"wolf spider\",\r\n  \"tick\",\r\n  \"centipede\",\r\n  \"isopod\",\r\n  \"Dungeness crab\",\r\n  \"rock crab\",\r\n  \"fiddler crab\",\r\n  \"king crab\",\r\n  \"American lobster\",\r\n  \"spiny lobster\",\r\n  \"crayfish\",\r\n  \"hermit crab\",\r\n  \"tiger beetle\",\r\n  \"ladybug\",\r\n  \"ground beetle\",\r\n  \"long-horned beetle\",\r\n  \"leaf beetle\",\r\n  \"dung beetle\",\r\n  \"rhinoceros beetle\",\r\n  \"weevil\",\r\n  \"fly\",\r\n  \"bee\",\r\n  \"grasshopper\",\r\n  \"cricket\",\r\n  \"walking stick\",\r\n  \"cockroach\",\r\n  \"mantis\",\r\n  \"cicada\",\r\n  \"leafhopper\",\r\n  \"lacewing\",\r\n  \"dragonfly\",\r\n  \"damselfly\",\r\n  \"admiral\",\r\n  \"ringlet\",\r\n  \"monarch\",\r\n  \"cabbage butterfly\",\r\n  \"sulphur butterfly\",\r\n  \"lycaenid\",\r\n  \"jellyfish\",\r\n  \"sea anemone\",\r\n  \"brain coral\",\r\n  \"flatworm\",\r\n  \"nematode\",\r\n  \"conch\",\r\n  \"snail\",\r\n  \"slug\",\r\n  \"sea slug\",\r\n  \"chiton\",\r\n  \"sea urchin\",\r\n  \"sea cucumber\",\r\n  \"iron\",\r\n  \"espresso maker\",\r\n  \"microwave\",\r\n  \"Dutch oven\",\r\n  \"rotisserie\",\r\n  \"toaster\",\r\n  \"waffle iron\",\r\n  \"vacuum\",\r\n  \"dishwasher\",\r\n  \"refrigerator\",\r\n  \"washer\",\r\n  \"Crock Pot\",\r\n  \"frying pan\",\r\n  \"wok\",\r\n  \"caldron\",\r\n  \"coffeepot\",\r\n  \"teapot\",\r\n  \"spatula\",\r\n  \"altar\",\r\n  \"triumphal arch\",\r\n  \"patio\",\r\n  \"steel arch bridge\",\r\n  \"suspension bridge\",\r\n  \"viaduct\",\r\n  \"barn\",\r\n  \"greenhouse\",\r\n  \"palace\",\r\n  \"monastery\",\r\n  \"library\",\r\n  \"apiary\",\r\n  \"boathouse\",\r\n  \"church\",\r\n  \"mosque\",\r\n  \"stupa\",\r\n  \"planetarium\",\r\n  \"restaurant\",\r\n  \"cinema\",\r\n  \"home theater\",\r\n  \"lumbermill\",\r\n  \"coil\",\r\n  \"obelisk\",\r\n  \"totem pole\",\r\n  \"castle\",\r\n  \"prison\",\r\n  \"grocery store\",\r\n  \"bakery\",\r\n  \"barbershop\",\r\n  \"bookshop\",\r\n  \"butcher shop\",\r\n  \"confectionery\",\r\n  \"shoe shop\",\r\n  \"tobacco shop\",\r\n  \"toyshop\",\r\n  \"fountain\",\r\n  \"cliff dwelling\",\r\n  \"yurt\",\r\n  \"dock\",\r\n  \"brass\",\r\n  \"megalith\",\r\n  \"bannister\",\r\n  \"breakwater\",\r\n  \"dam\",\r\n  \"chainlink fence\",\r\n  \"picket fence\",\r\n  \"worm fence\",\r\n  \"stone wall\",\r\n  \"grille\",\r\n  \"sliding door\",\r\n  \"turnstile\",\r\n  \"mountain tent\",\r\n  \"scoreboard\",\r\n  \"honeycomb\",\r\n  \"plate rack\",\r\n  \"pedestal\",\r\n  \"beacon\",\r\n  \"mashed potato\",\r\n  \"bell pepper\",\r\n  \"head cabbage\",\r\n  \"broccoli\",\r\n  \"cauliflower\",\r\n  \"zucchini\",\r\n  \"spaghetti squash\",\r\n  \"acorn squash\",\r\n  \"butternut squash\",\r\n  \"cucumber\",\r\n  \"artichoke\",\r\n  \"cardoon\",\r\n  \"mushroom\",\r\n  \"shower curtain\",\r\n  \"jean\",\r\n  \"carton\",\r\n  \"handkerchief\",\r\n  \"sandal\",\r\n  \"ashcan\",\r\n  \"safe\",\r\n  \"plate\",\r\n  \"necklace\",\r\n  \"croquet ball\",\r\n  \"fur coat\",\r\n  \"thimble\",\r\n  \"pajama\",\r\n  \"running shoe\",\r\n  \"cocktail shaker\",\r\n  \"chest\",\r\n  \"manhole cover\",\r\n  \"modem\",\r\n  \"tub\",\r\n  \"tray\",\r\n  \"balance beam\",\r\n  \"bagel\",\r\n  \"prayer rug\",\r\n  \"kimono\",\r\n  \"hot pot\",\r\n  \"whiskey jug\",\r\n  \"knee pad\",\r\n  \"book jacket\",\r\n  \"spindle\",\r\n  \"ski mask\",\r\n  \"beer bottle\",\r\n  \"crash helmet\",\r\n  \"bottlecap\",\r\n  \"tile roof\",\r\n  \"mask\",\r\n  \"maillot\",\r\n  \"Petri dish\",\r\n  \"football helmet\",\r\n  \"bathing cap\",\r\n  \"teddy\",\r\n  \"holster\",\r\n  \"pop bottle\",\r\n  \"photocopier\",\r\n  \"vestment\",\r\n  \"crossword puzzle\",\r\n  \"golf ball\",\r\n  \"trifle\",\r\n  \"suit\",\r\n  \"water tower\",\r\n  \"feather boa\",\r\n  \"cloak\",\r\n  \"red wine\",\r\n  \"drumstick\",\r\n  \"shield\",\r\n  \"Christmas stocking\",\r\n  \"hoopskirt\",\r\n  \"menu\",\r\n  \"stage\",\r\n  \"bonnet\",\r\n  \"meat loaf\",\r\n  \"baseball\",\r\n  \"face powder\",\r\n  \"scabbard\",\r\n  \"sunscreen\",\r\n  \"beer glass\",\r\n  \"hen-of-the-woods\",\r\n  \"guacamole\",\r\n  \"lampshade\",\r\n  \"wool\",\r\n  \"hay\",\r\n  \"bow tie\",\r\n  \"mailbag\",\r\n  \"water jug\",\r\n  \"bucket\",\r\n  \"dishrag\",\r\n  \"soup bowl\",\r\n  \"eggnog\",\r\n  \"mortar\",\r\n  \"trench coat\",\r\n  \"paddle\",\r\n  \"chain\",\r\n  \"swab\",\r\n  \"mixing bowl\",\r\n  \"potpie\",\r\n  \"wine bottle\",\r\n  \"shoji\",\r\n  \"bulletproof vest\",\r\n  \"drilling platform\",\r\n  \"binder\",\r\n  \"cardigan\",\r\n  \"sweatshirt\",\r\n  \"pot\",\r\n  \"birdhouse\",\r\n  \"hamper\",\r\n  \"ping-pong ball\",\r\n  \"pencil box\",\r\n  \"pay-phone\",\r\n  \"consomme\",\r\n  \"apron\",\r\n  \"punching bag\",\r\n  \"backpack\",\r\n  \"groom\",\r\n  \"bearskin\",\r\n  \"pencil sharpener\",\r\n  \"broom\",\r\n  \"mosquito net\",\r\n  \"abaya\",\r\n  \"mortarboard\",\r\n  \"poncho\",\r\n  \"crutch\",\r\n  \"Polaroid camera\",\r\n  \"space bar\",\r\n  \"cup\",\r\n  \"racket\",\r\n  \"traffic light\",\r\n  \"quill\",\r\n  \"radio\",\r\n  \"dough\",\r\n  \"cuirass\",\r\n  \"military uniform\",\r\n  \"lipstick\",\r\n  \"shower cap\",\r\n  \"monitor\",\r\n  \"oscilloscope\",\r\n  \"mitten\",\r\n  \"brassiere\",\r\n  \"French loaf\",\r\n  \"vase\",\r\n  \"milk can\",\r\n  \"rugby ball\",\r\n  \"paper towel\",\r\n  \"earthstar\",\r\n  \"envelope\",\r\n  \"miniskirt\",\r\n  \"cowboy hat\",\r\n  \"trolleybus\",\r\n  \"perfume\",\r\n  \"bathtub\",\r\n  \"hotdog\",\r\n  \"coral fungus\",\r\n  \"bullet train\",\r\n  \"pillow\",\r\n  \"toilet tissue\",\r\n  \"cassette\",\r\n  \"carpenter's kit\",\r\n  \"ladle\",\r\n  \"stinkhorn\",\r\n  \"lotion\",\r\n  \"hair spray\",\r\n  \"academic gown\",\r\n  \"dome\",\r\n  \"crate\",\r\n  \"wig\",\r\n  \"burrito\",\r\n  \"pill bottle\",\r\n  \"chain mail\",\r\n  \"theater curtain\",\r\n  \"window shade\",\r\n  \"barrel\",\r\n  \"washbasin\",\r\n  \"ballpoint\",\r\n  \"basketball\",\r\n  \"bath towel\",\r\n  \"cowboy boot\",\r\n  \"gown\",\r\n  \"window screen\",\r\n  \"agaric\",\r\n  \"cellular telephone\",\r\n  \"nipple\",\r\n  \"barbell\",\r\n  \"mailbox\",\r\n  \"lab coat\",\r\n  \"fire screen\",\r\n  \"minibus\",\r\n  \"packet\",\r\n  \"maze\",\r\n  \"pole\",\r\n  \"horizontal bar\",\r\n  \"sombrero\",\r\n  \"pickelhaube\",\r\n  \"rain barrel\",\r\n  \"wallet\",\r\n  \"cassette player\",\r\n  \"comic book\",\r\n  \"piggy bank\",\r\n  \"street sign\",\r\n  \"bell cote\",\r\n  \"fountain pen\",\r\n  \"Windsor tie\",\r\n  \"volleyball\",\r\n  \"overskirt\",\r\n  \"sarong\",\r\n  \"purse\",\r\n  \"bolo tie\",\r\n  \"bib\",\r\n  \"parachute\",\r\n  \"sleeping bag\",\r\n  \"television\",\r\n  \"swimming trunks\",\r\n  \"measuring cup\",\r\n  \"espresso\",\r\n  \"pizza\",\r\n  \"breastplate\",\r\n  \"shopping basket\",\r\n  \"wooden spoon\",\r\n  \"saltshaker\",\r\n  \"chocolate sauce\",\r\n  \"ballplayer\",\r\n  \"goblet\",\r\n  \"gyromitra\",\r\n  \"stretcher\",\r\n  \"water bottle\",\r\n  \"dial telephone\",\r\n  \"soap dispenser\",\r\n  \"jersey\",\r\n  \"school bus\",\r\n  \"jigsaw puzzle\",\r\n  \"plastic bag\",\r\n  \"reflex camera\",\r\n  \"diaper\",\r\n  \"Band Aid\",\r\n  \"ice lolly\",\r\n  \"velvet\",\r\n  \"tennis ball\",\r\n  \"gasmask\",\r\n  \"doormat\",\r\n  \"Loafer\",\r\n  \"ice cream\",\r\n  \"pretzel\",\r\n  \"quilt\",\r\n  \"maillot\",\r\n  \"tape player\",\r\n  \"clog\",\r\n  \"iPod\",\r\n  \"bolete\",\r\n  \"scuba diver\",\r\n  \"pitcher\",\r\n  \"matchstick\",\r\n  \"bikini\",\r\n  \"sock\",\r\n  \"CD player\",\r\n  \"lens cap\",\r\n  \"thatch\",\r\n  \"vault\",\r\n  \"beaker\",\r\n  \"bubble\",\r\n  \"cheeseburger\",\r\n  \"parallel bars\",\r\n  \"flagpole\",\r\n  \"coffee mug\",\r\n  \"rubber eraser\",\r\n  \"stole\",\r\n  \"carbonara\",\r\n  \"dumbbell\"\r\n];\r\nexport {darknetImagnetLabels};","import { Input, Classification, ImageOptions, modelSize } from \"../types\";\r\nimport { Classifier, ClassifierConfig } from \"./classifier\";\r\nimport { preProcess } from \"../utils/preProcess\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\n\r\nexport class DarknetClassifier implements Classifier, ClassifierConfig {\r\n  model: tf.LayersModel;\r\n\r\n  modelName: string;\r\n  modelURL: string;\r\n  modelSize: modelSize;\r\n  classProbThreshold: number;\r\n  topK: number;\r\n  labels: string[];\r\n  resizeOption: ImageOptions;\r\n\r\n  constructor(options:ClassifierConfig) {\r\n    this.modelName = options.modelName;\r\n    this.modelURL = options.modelURL;\r\n    this.modelSize = options.modelSize;\r\n    this.classProbThreshold = options.classProbThreshold;\r\n    this.topK = options.topK;\r\n    this.labels = options.labels;\r\n    this.resizeOption = options.resizeOption;\r\n  }\r\n\r\n  /**\r\n   * Loads the model from `modelURL`\r\n   */\r\n  public async load(): Promise<boolean> {\r\n    if (tf == null) {\r\n      throw new Error(\r\n          `Cannot find TensorFlow.js. If you are using a <script> tag, please ` +\r\n          `also include @tensorflow/tfjs on the page before using this model.`);\r\n    }\r\n    try {\r\n      this.model = await tf.loadLayersModel(this.modelURL);\r\n      return true;\r\n    } catch (e) {\r\n      console.error(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Caches the model\r\n   */\r\n  public cache(): void {\r\n    const dummy = tf.zeros([this.modelSize, this.modelSize, 3]);\r\n    this.classify(dummy);\r\n    tf.dispose(dummy);\r\n  }\r\n\r\n  /**\r\n   * Dispose of the tensors allocated by the model. You should call this when you\r\n   * are done with the detection.\r\n   */\r\n  public dispose(): void {\r\n    if (this.model) {\r\n      this.model.dispose();\r\n    }\r\n  }\r\n\r\n  public async classify(image: Input): Promise<Classification[]> {\r\n    await tf.nextFrame();\r\n    const { values, indices } = tf.tidy(() => {\r\n      const logits = this.classifyInternal(image);\r\n      const classes = tf.softmax(logits as tf.Tensor);\r\n      return tf.topk(classes, this.topK, true);\r\n    });\r\n    const valuesArray = await values.data<'float32'>();\r\n    const indicesArray = await indices.data<'int32'>();\r\n    tf.dispose({values, indices});\r\n    return this.createClassifications(valuesArray,indicesArray);\r\n  }\r\n\r\n  public classifySync(image: Input): Classification[] {\r\n    const { values, indices } = tf.tidy(() => {\r\n      const logits = this.classifyInternal(image);\r\n      const classes = tf.softmax(logits as tf.Tensor);\r\n      return tf.topk(classes, this.topK, true);\r\n    });\r\n    const valuesArray =  values.dataSync<'float32'>();\r\n    const indicesArray = indices.dataSync<'int32'>();\r\n    tf.dispose({values, indices});\r\n    return this.createClassifications(valuesArray,indicesArray);\r\n  }\r\n\r\n  private classifyInternal(image: Input): tf.Tensor | tf.Tensor[] {\r\n    return tf.tidy(() => {\r\n      const data = preProcess(image,this.modelSize,this.resizeOption\r\n      );\r\n      return this.model.predict(data[2]);\r\n    });\r\n  }\r\n\r\n  private createClassifications(values: Float32Array,indices: Int32Array): Classification[] {\r\n    const classifications:Classification[] = [];\r\n    for (let i = 0; i < indices.length; i++) {\r\n      const c :Classification = {\r\n        label:this.labels[indices[i]],\r\n        labelIndex:indices[i],\r\n        score:values[i],\r\n      };\r\n      classifications.push(c);\r\n    }\r\n    return classifications;\r\n  }\r\n}\r\n"],"sourceRoot":""}